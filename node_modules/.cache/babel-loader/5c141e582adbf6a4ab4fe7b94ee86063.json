{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hudson\\\\development\\\\codeacademy\\\\Web Dev\\\\appointment_planner\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\",\n    HOME: \"/\"\n  };\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  const addContact = (name, number, email) => {\n    let newContact = {\n      name: name,\n      number: number,\n      email: email\n    };\n    setContacts(prev => [...prev, newContact]);\n  };\n\n  const addAppointment = (title, contact, date, time) => {\n    let newAppointment = {\n      title: title,\n      contact: contact,\n      date: date,\n      time: time\n    };\n    setAppointments(prev => [...prev, newAppointment]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.HOME,\n        exact: true,\n        activeClassName: \"active\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.CONTACTS,\n        activeClassName: \"active\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.APPOINTMENTS,\n        activeClassName: \"active\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: ROUTES.HOME,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.CONTACTS,\n          children: /*#__PURE__*/_jsxDEV(ContactsPage, {\n            contacts: contacts,\n            addContact: addContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.APPOINTMENTS,\n          children: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n            appointments: appointments,\n            contacts: contacts,\n            addAppointment: addAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hudson/development/codeacademy/Web Dev/appointment_planner/src/App.js"],"names":["React","useState","Switch","Route","Redirect","NavLink","AppointmentsPage","ContactsPage","App","contacts","setContacts","appointments","setAppointments","ROUTES","CONTACTS","APPOINTMENTS","HOME","addContact","name","number","email","newContact","prev","addAppointment","title","contact","date","time","newAppointment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n\t\tCONTACTS: \"/contacts\",\r\n\t\tAPPOINTMENTS: \"/appointments\",\r\n\t\tHOME: \"/\",\r\n\t};\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContact = (name, number, email) => {\r\n    let newContact = {\r\n      name: name,\r\n      number: number,\r\n      email: email\r\n    };\r\n    setContacts((prev) => [...prev, newContact]);\r\n  }\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    let newAppointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time\r\n    }\r\n    setAppointments((prev) => [...prev, newAppointment]);\r\n  }\r\n\r\n  return (\r\n\t\t<>\r\n\t\t\t<nav>\r\n\t\t\t\t<NavLink to={ROUTES.HOME} exact activeClassName=\"active\">\r\n\t\t\t\t\tHome\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n\t\t\t\t\tContacts\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n\t\t\t\t\tAppointments\r\n\t\t\t\t</NavLink>\r\n\t\t\t</nav>\r\n\t\t\t<main>\r\n\t\t\t\t<Switch>\r\n          <Route exact path={ROUTES.HOME}>\r\n            <div></div>\r\n          </Route>\r\n\t\t\t\t\t<Route path={ROUTES.CONTACTS}>\r\n\t\t\t\t\t\t{/* Add props to ContactsPage */}\r\n\t\t\t\t\t\t<ContactsPage contacts={contacts} addContact={addContact} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={ROUTES.APPOINTMENTS}>\r\n\t\t\t\t\t\t{/* Add props to AppointmentsPage */}\r\n\t\t\t\t\t\t<AppointmentsPage\r\n\t\t\t\t\t\t\tappointments={appointments}\r\n\t\t\t\t\t\t\tcontacts={contacts}\r\n\t\t\t\t\t\t\taddAppointment={addAppointment}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}